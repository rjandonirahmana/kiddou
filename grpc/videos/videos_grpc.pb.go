// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: grpc/videos.proto

package videos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// VideosStreanClient is the client API for VideosStrean service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type VideosStreanClient interface {
	GetByCategoryID(ctx context.Context, in *VideosRequest, opts ...grpc.CallOption) (VideosStrean_GetByCategoryIDClient, error)
}

type videosStreanClient struct {
	cc grpc.ClientConnInterface
}

func NewVideosStreanClient(cc grpc.ClientConnInterface) VideosStreanClient {
	return &videosStreanClient{cc}
}

func (c *videosStreanClient) GetByCategoryID(ctx context.Context, in *VideosRequest, opts ...grpc.CallOption) (VideosStrean_GetByCategoryIDClient, error) {
	stream, err := c.cc.NewStream(ctx, &VideosStrean_ServiceDesc.Streams[0], "/videos.VideosStrean/GetByCategoryID", opts...)
	if err != nil {
		return nil, err
	}
	x := &videosStreanGetByCategoryIDClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VideosStrean_GetByCategoryIDClient interface {
	Recv() (*VideoResponse, error)
	grpc.ClientStream
}

type videosStreanGetByCategoryIDClient struct {
	grpc.ClientStream
}

func (x *videosStreanGetByCategoryIDClient) Recv() (*VideoResponse, error) {
	m := new(VideoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VideosStreanServer is the server API for VideosStrean service.
// All implementations must embed UnimplementedVideosStreanServer
// for forward compatibility
type VideosStreanServer interface {
	GetByCategoryID(*VideosRequest, VideosStrean_GetByCategoryIDServer) error
	mustEmbedUnimplementedVideosStreanServer()
}

// UnimplementedVideosStreanServer must be embedded to have forward compatible implementations.
type UnimplementedVideosStreanServer struct {
}

func (UnimplementedVideosStreanServer) GetByCategoryID(*VideosRequest, VideosStrean_GetByCategoryIDServer) error {
	return status.Errorf(codes.Unimplemented, "method GetByCategoryID not implemented")
}
func (UnimplementedVideosStreanServer) mustEmbedUnimplementedVideosStreanServer() {}

// UnsafeVideosStreanServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to VideosStreanServer will
// result in compilation errors.
type UnsafeVideosStreanServer interface {
	mustEmbedUnimplementedVideosStreanServer()
}

func RegisterVideosStreanServer(s grpc.ServiceRegistrar, srv VideosStreanServer) {
	s.RegisterService(&VideosStrean_ServiceDesc, srv)
}

func _VideosStrean_GetByCategoryID_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VideosRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VideosStreanServer).GetByCategoryID(m, &videosStreanGetByCategoryIDServer{stream})
}

type VideosStrean_GetByCategoryIDServer interface {
	Send(*VideoResponse) error
	grpc.ServerStream
}

type videosStreanGetByCategoryIDServer struct {
	grpc.ServerStream
}

func (x *videosStreanGetByCategoryIDServer) Send(m *VideoResponse) error {
	return x.ServerStream.SendMsg(m)
}

// VideosStrean_ServiceDesc is the grpc.ServiceDesc for VideosStrean service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var VideosStrean_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "videos.VideosStrean",
	HandlerType: (*VideosStreanServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetByCategoryID",
			Handler:       _VideosStrean_GetByCategoryID_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc/videos.proto",
}
